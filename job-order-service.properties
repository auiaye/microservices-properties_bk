# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://localhost:3306/app_demo_microservices
spring.datasource.username=root
spring.datasource.password=P@ssw0rd
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Show or not log for each sql query
spring.jpa.show-sql=false
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=update
spring.session.store-type= jdbc
spring.session.jdbc.table-name= spring_session
spring.session.jdbc.initialize-schema= always
spring.session.jdbc.cleanup-cron=0 */5 * * * *

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

logging.level.org.hibernate.persister.entity: ERROR

spring.datasource.hikari.connectionTimeout=600000
spring.datasource.hikari.minimumIdle=10
spring.datasource.hikari.maximumPoolSize=50
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.poolName=ErpJPAHikariCP
spring.datasource.hikari.maxLifetime=580000
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true